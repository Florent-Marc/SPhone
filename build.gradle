buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven{
            url "https://jitpack.io/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true

    }

}

plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}
repositories {
    mavenCentral()
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven{
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }

    maven {
        url('http://maven.dynamx.fr/artifactory/DynamXRepo/')
    }
    maven {
        url 'https://maven.dynamx.fr/artifactory/' + 'ACsGuisRepo/'
    }
    maven {
        url 'https://www.cursemaven.com/'
    }

}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'

apply plugin: "java"
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
sourceSets {main { output.resourcesDir = output.classesDir }}

group = "com.dev" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
version = "1.3.5"
archivesBaseName = "sphone"


sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
minecraft {

    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                jw {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                jw {
                    source sourceSets.main
                }
            }
        }
    }

    sourceSets.main.resources { srcDir 'src/generated/resources' }


    dependencies {

        implementation 'com.google.code.gson:gson:2.10.1'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'
        shadow group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'
        shadow group: 'org.xerial', name: 'sqlite-jdbc', version: '3.7.2'

        compile fileTree(dir: 'libs', include: '*.jar')
    }


    jar {
        manifest {
            attributes([
                    "Specification-Title"        : "Beta-Sphone",
                    "Specification-Vendor"       : "0hSandji",
                    "Specification-Version"      : "1", // We are version 1 of ourselves
                    "Implementation-Title"       : project.name,
                    "Implementation-Version"     : project.version,
                    "Implementation-Vendor"      : "0hSandji",
                    "Implementation-Timestamp"   : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")

            ])
        }

        from {
            configurations.compile
                    .filter {
                        !it.name.endsWith('.psd') ||
                        !it.name.contains('fivem')

                    }
                    .collect { it.isDirectory() ? it : zipTree(it) }
        }

    }


}
configurations {
    shadow
    compile.extendsFrom shadow
    shadowMe { transitive = false }
}
shadowJar {
    classifier 'all'

    project.configurations.shadow.setTransitive(true)
    configurations = [project.configurations.shadow]
    relocate 'org.apache.commons.collections4', 'com.dev.sphone.repack.org.apache.commons.collections4'
    relocate 'gnu.trove', 'com.dev.sphone.repack.gnu.trove'
    relocate "com.neovisionaries.ws.client", "com.dev.sphone.repack.com.neovisionaries.ws.client"
    relocate "com.iwebpp.crypto", "com.dev.sphone.repack.com.iwebpp.crypto"
    relocate "com.fasterxml.jackson", "com.dev.sphone.repack.com.fasterxml.jackson"
    relocate "com.google.gson", "com.dev.sphone.repack.com.google.gson"
    relocate "org.json", "com.dev.sphone.repack.org.json"
    relocate "okio", "com.dev.sphone.repack.okio"
    relocate "okhttp3", "com.dev.sphone.repack.okhttp3"
    relocate "okhttp3", "com.dev.sphone.repack.okhttp3"
    relocate "org.slf4j", "com.dev.sphone.repack.org.slf4j"


    exclude 'assets/**/*.psd'
    exclude 'assets/sphone/fivem/**'
    exclude 'org/sqlite/**'
    exclude 'com/google/protobuf/**'
}

reobf {
    shadowJar {}
}
artifacts {
    archives shadowJar
}
jar.finalizedBy('reobfJar')

/** Shit that idea needs to process resources ? **/
idea {
    module {
        inheritOutputDirs = true
    }
}
subprojects {
    apply plugin: 'idea'
}
task prepareAssets(type: Copy) {
    group = 'build'
    from(project.file('src/main/resources'))
    into project.file('build/classes/java/main')


}
classes.dependsOn(prepareAssets)

/** end of shit **/